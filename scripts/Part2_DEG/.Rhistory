## 9766 genes
#######################################################################
## Split by group depending on which gene is expressed in which case ##
#######################################################################
a = ifelse(rowSums(RSEM_final_hope.gene[grep("chy", names(RSEM_final_hope.gene))]) !=0,
"in_chytrid_alone", "")
b = ifelse(rowSums(RSEM_final_hope.gene[grep("both", names(RSEM_final_hope.gene))]) !=0,
"in_both_organisms", "")
c = ifelse(rowSums(RSEM_final_hope.gene[grep("cyano", names(RSEM_final_hope.gene))]) !=0,
"in_cyano_alone", "")
RSEM_final_hope.gene$whichOrg <- trimws(paste(a,b,c, sep = " "))
RSEM_final_hope.gene$whichTranscriptome <- ifelse(
grepl("TRINITY", RSEM_final_hope.gene$X), "chytrid", "cyano")
table(RSEM_final_hope.gene$whichTranscriptome,
RSEM_final_hope.gene$whichOrg)
#            0  in_both_organisms in_both_organisms in_cyano_alone in_chytrid_alone
# chytrid  679               1764                              751              360
# cyano    629                  1                             3420                0
#
#         in_chytrid_alone  in_cyano_alone in_chytrid_alone in_both_organisms
# chytrid                                5                               1623
# cyano                                  2                                  0
#
#         in_chytrid_alone in_both_organisms in_cyano_alone in_cyano_alone
# chytrid                                               140             16
# cyano                                                 161            215
## Figure X ##
##### 1. rm contamination in my chytrid assembly #####
# chytrid genes also found in when cyanobacteria is alone:
# chytrid + in_both_organisms in_cyano_alone
# chytrid + in_chytrid_alone  in_cyano_alone
# chytrid + in_chytrid_alone in_both_organisms in_cyano_alone
# chytrid + in_cyano_alone
listOfTranscriptContaminant_toRmFromChytridTranscriptome <-
RSEM_final_hope.gene[
RSEM_final_hope.gene$whichTranscriptome %in% "chytrid" & RSEM_final_hope.gene$whichOrg %in%
c("in_both_organisms in_cyano_alone",
"in_chytrid_alone  in_cyano_alone",
"in_chytrid_alone in_both_organisms in_cyano_alone",
"in_cyano_alone"),"X"]
write.csv(listOfTranscriptContaminant_toRmFromChytridTranscriptome,
"../../data/listOfTranscriptContaminant_toRmFromChytridTranscriptome", quote = F, row.names = F)
#### 2. Which genes have been sequenced for chytrid and cyano (and are not contamination)?
#############
## Chytrid ##
sequencedChytridGenes <- RSEM_final_hope.gene[
RSEM_final_hope.gene$whichOrg %in% c("in_chytrid_alone in_both_organisms",
"in_chytrid_alone", "in_both_organisms") &
RSEM_final_hope.gene$whichTranscriptome %in% "chytrid","X"]
length(sequencedChytridGenes) # 3747 sequenced genes
## Select only "chytrid and both" genes
# 3747 genes investigated
RSEM_final_hope.gene_chytrid <- RSEM_final_hope.gene[
RSEM_final_hope.gene$X %in% sequencedChytridGenes,]
## Select only "chytrid and both" samples
RSEM_final_hope.gene_chytrid = RSEM_final_hope.gene_chytrid[
grep("cyano", names(RSEM_final_hope.gene_chytrid),invert = T)]
## Clean
RSEM_final_hope.gene_chytrid=RSEM_final_hope.gene_chytrid[
!names(RSEM_final_hope.gene_chytrid) %in% c("X", "whichOrg", "whichTranscriptome")]
## Rename based on annotations
rownames(RSEM_final_hope.gene_chytrid) = make.unique(annotationChytrid$gene_name[
match(row.names(RSEM_final_hope.gene_chytrid), annotationChytrid$custom_gene_name)])
nrow(RSEM_final_hope.gene_chytrid) # 3747
## Merge identical proteins in only one row, suming the counts
RSEM_final_hope.gene_chytrid = RSEM_final_hope.gene_chytrid %>%
mutate(base_name = sub("\\.\\d+$", "", rownames(RSEM_final_hope.gene_chytrid))) %>%
group_by(base_name) %>%
summarise(across(everything(), sum)) %>%
tibble::column_to_rownames("base_name") %>% data.frame()
nrow(RSEM_final_hope.gene_chytrid) # 3156 genes
# 3747 - 3156 = 591 genes that had multiple transcript names
###################
## Cyanobacteria ##
sequencedCyanoGenes <- RSEM_final_hope.gene[
RSEM_final_hope.gene$whichOrg %in% c("in_both_organisms in_cyano_alone",
"in_cyano_alone", "in_both_organisms") &
RSEM_final_hope.gene$whichTranscriptome %in% "cyano","X"]
length(sequencedCyanoGenes) # 3636 sequenced genes
## Select only "cyano and both" genes
RSEM_final_hope.gene_cyano <- RSEM_final_hope.gene[
RSEM_final_hope.gene$X %in% sequencedCyanoGenes,]
## Select only "cyano and both" samples
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano[
grep("chy", names(RSEM_final_hope.gene_cyano),invert = T)]
## Clean
RSEM_final_hope.gene_cyano=RSEM_final_hope.gene_cyano[
!names(RSEM_final_hope.gene_cyano) %in% c("X", "whichOrg", "whichTranscriptome")]
## Rename based on annotations
rownames(RSEM_final_hope.gene_cyano) = make.unique(annotationCyano$gene_name[
match(row.names(RSEM_final_hope.gene_cyano), annotationCyano$custom_gene_name)])
nrow(RSEM_final_hope.gene_cyano) # 3636 genes
## Merge identical proteins in only one row, suming the counts
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano %>%
mutate(base_name = sub("\\.\\d+$", "", rownames(RSEM_final_hope.gene_cyano))) %>%
group_by(base_name) %>%
summarise(across(everything(), sum)) %>%
tibble::column_to_rownames("base_name") %>% data.frame()
nrow(RSEM_final_hope.gene_cyano) # 3589 genes
# 3636-3589=47 genes with duplicated counts
###################################
## Low quality samples filtering ##
###################################
## Investigate outliers (my function)
makeClusterWGCNA(t(RSEM_final_hope.gene_chytrid))
## In11 clear outlier
makeClusterWGCNA(t(RSEM_final_hope.gene_cyano))
# no clear outlier
#####!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
## Rm In11 from the chytrid dataset
RSEM_final_hope.gene_chytrid = RSEM_final_hope.gene_chytrid[
!names(RSEM_final_hope.gene_chytrid) %in% "met_both_In11"]
## rm genes with zero counts (196 genes of chytrid were only in In11!!)
RSEM_final_hope.gene_chytrid = RSEM_final_hope.gene_chytrid[
rowSums(RSEM_final_hope.gene_chytrid) != 0,]
# To determine if a sample has been sufficiently sequenced, a saturation curve
# can be generated with software like vegan in R
# if (!requireNamespace("BiocManager", quietly = TRUE))
# install.packages("BiocManager")
# BiocManager::install("NOISeq")
library(NOISeq)
# Sequencing depth & Expression Quantification
# The plots in this section can be generated by only providing the expression data, since no other biological
# information is required. Their purpose is to assess if the sequencing depth of the samples is enough to detect the
# features of interest and to get a good quantification of their expression.
# Saturation plot
# The â€œSaturation" plot shows the number of features in the genome detected with more than k counts with
# the sequencing depth of the sample, and with higher and lower simulated sequencing depth
# Create an ExpressionSet object
counts_chy <- as.matrix(RSEM_final_hope.gene_chytrid)
eset_chy <- ExpressionSet(assayData = counts_chy)
mysaturation_chy = dat(eset_chy, k = 0, ndepth = 7, type = "saturation")
## Chytrid alone:
explo.plot(mysaturation_chy, toplot = 1, samples = 1:11)
## Saturation of chytrid low (between 29.7% and 44.1%)
## Both organisms:
explo.plot(mysaturation_chy, toplot = 1, samples = 12:18)
## 34.4 to 50.1%
counts_cyano <- as.matrix(RSEM_final_hope.gene_cyano)
eset_cyano <- ExpressionSet(assayData = counts_cyano)
mysaturation_cyano = dat(eset_cyano, k = 0, ndepth = 7, type = "saturation")
## Both organisms:
explo.plot(mysaturation_cyano, toplot = 1, samples = 1:8)
# good (60+) except for In2 and In11 (<35%)
## Cyano alone
explo.plot(mysaturation_cyano, toplot = 1, samples = 9:20)
# very good saturation level >97.3%
#####!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
## Rm In2 and In11 from the cyano dataset
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano[
!names(RSEM_final_hope.gene_cyano) %in% c("control_both_In2", "met_both_In11")]
## rm genes with zero counts
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano[
rowSums(RSEM_final_hope.gene_cyano) != 0,]
###################################
## Low quality genes filtering ##
###################################
RSEM_final_hope.gene_chytrid <- RSEM_final_hope.gene_chytrid[
rowSums(RSEM_final_hope.gene_chytrid >= 10) >= 3,]
RSEM_final_hope.gene_cyano <- RSEM_final_hope.gene_cyano[
rowSums(RSEM_final_hope.gene_cyano >= 10) >= 3,]
nrow(RSEM_final_hope.gene_chytrid) # 1336
nrow(RSEM_final_hope.gene_cyano) # 3497
#####################
## DESeq2 jan 2025 ##
#####################
## I. Chytrid transcripts
contrast_chytridgenome<- calculateContrasts(
my_countsmatrix=RSEM_final_hope.gene_chytrid,
my_org="chy")
## II. Cyano transcripts
contrast_cyanogenome <- calculateContrasts(
my_countsmatrix=RSEM_final_hope.gene_cyano,
my_org="cyano")
## Volcano plots
V_chytrid_inf_effect_control <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_control,
title = "infecting vs non infecting chytrid gene expression, no MET")
V_chytrid_inf_effect_met <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_met,
title = "infecting vs non infecting chytrid gene expression, MET")
V_chytrid_met_effect_1org <- makeVolcano(
res = contrast_chytridgenome$resr_met_effect_1org,
title = "MET effect on chytrid gene expression")
V_chytrid_met_effect_2orgs <- makeVolcano(
res = contrast_chytridgenome$resr_met_effect_2orgs,
title = "MET effect on chytrid infecting bacteria gene expression")
V_cyano_inf_effect_control <- makeVolcano(
res = contrast_cyanogenome$resr_inf_effect_control,
title = "infected vs non infected cyano gene expression, no MET")
V_cyano_inf_effect_met <- makeVolcano(
res = contrast_cyanogenome$resr_inf_effect_met,
title = "infected vs non infected cyano gene expression, MET")
V_cyano_met_effect_1org <- makeVolcano(
res = contrast_cyanogenome$resr_met_effect_1org,
title = "MET effect on cyano gene expression")
V_cyano_met_effect_2orgs <- makeVolcano(
res = contrast_cyanogenome$resr_met_effect_2orgs,
title = "MET effect on cyano infecting bacteria gene expression")
## open bigger window
dev.new(width = 15, height = 12)
pdf("../../figures/Fig1-part1_chytrid_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_chytrid_inf_effect_control$plot,
V_chytrid_inf_effect_met$plot,
V_chytrid_met_effect_1org$plot,
V_chytrid_met_effect_2orgs$plot)
dev.off()
dev.new(width = 15, height = 12)
pdf("../../figures/Fig2-part1_cyano_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot)
dev.off()
## Venn diagrams
library(VennDiagram)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn", # Set filename to NULL to display the plot directly in R session
imagetype = "png", # You can change this to other formats like "pdf", "jpeg", etc.
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
# Display the Venn diagram
grid.newpage()
grid.draw(venn_config)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.pdf", # Set filename to NULL to display the plot directly in R session
imagetype = "pdf", # You can change this to other formats like "pdf", "jpeg", etc.
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.pdf", # Set filename to NULL to display the plot directly in R session
imagetype = "pdf", # You can change this to other formats like "pdf", "jpeg", etc.
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.pdf", # Set filename to NULL to display the plot directly in R session
imagetype = "pdf", # You can change this to other formats like "pdf", "jpeg", etc.
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.pdf", # Set filename to NULL to display the plot directly in R session
imagetype = "PDF", # You can change this to other formats like "pdf", "jpeg", etc.
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
?venn.diagram
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.svg", # Set filename to NULL to display the plot directly in R session
imagetype = "svg",
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
# Display the Venn diagram
grid.newpage()
grid.draw(venn_config)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.svg", # Set filename to NULL to display the plot directly in R session
imagetype = "svg",
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
# Display the Venn diagram
grid.newpage()
grid.draw(venn_config)
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect cyano - control"=
getGenes(contrast_cyanogenome$resr_inf_effect_control),
"infection effect cyano - met"=
getGenes(contrast_cyanogenome$resr_inf_effect_met),
"met effect cyano - alone"=
getGenes(contrast_cyanogenome$resr_met_effect_1org),
"met effect cyano - infected"=
getGenes(contrast_cyanogenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
fill = hcl.colors(n=4, palette = "Zissou 1"),
filename = "../../figures/Fig2-part2_Venn.svg", # Set filename to NULL to display the plot directly in R session
imagetype = "svg", # You can change this to other formats like "pdf", "jpeg", etc.
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
## Venn diagrams
library(VennDiagram)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.svg", # Set filename to NULL to display the plot directly in R session
imagetype = "svg",
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect cyano - control"=
getGenes(contrast_cyanogenome$resr_inf_effect_control),
"infection effect cyano - met"=
getGenes(contrast_cyanogenome$resr_inf_effect_met),
"met effect cyano - alone"=
getGenes(contrast_cyanogenome$resr_met_effect_1org),
"met effect cyano - infected"=
getGenes(contrast_cyanogenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
fill = hcl.colors(n=4, palette = "Zissou 1"),
filename = "../../figures/Fig2-part2_Venn.svg", # Set filename to NULL to display the plot directly in R session
imagetype = "svg", # You can change this to other formats like "pdf", "jpeg", etc.
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
dev.off()
dev.off()
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.svg", # Set filename to NULL to display the plot directly in R session
imagetype = "svg",
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
# Set up the Venn diagram configuration
venn_config <- venn.diagram(
x = venn_data,
category.names = names(venn_data),
# fill = hcl.colors(n=4, palette = "Roma"),
filename = "../../figures/Fig1-part2_Venn.svg", # Set filename to NULL to display the plot directly in R session
imagetype = "svg",
# col = "transparent", # Set background color to transparent for better display in R session
cex = 2,
cex.label = 3,
lwd = 2
)
# # Display the Venn diagram
grid.newpage()
grid.draw(venn_config)
## Venn diagrams
devtools::install_github("yanlinlin82/ggvenn")
## Venn diagrams
# devtools::install_github("yanlinlin82/ggvenn")
library(ggvenn)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
ggvenn(
venn_data,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"),
stroke_size = 0.5, set_name_size = 4
)
ggvenn(
venn_data,
stroke_size = 0.5, set_name_size = 4
)
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs))
ggvenn(
venn_data,
stroke_size = 0.5, set_name_size = 4
)
