RSEM_final_hope.gene_cyano <- RSEM_final_hope.gene[
RSEM_final_hope.gene$X %in% sequencedCyanoGenes,]
## Select only "cyano and both" samples
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano[
grep("chy", names(RSEM_final_hope.gene_cyano),invert = T)]
## Clean
RSEM_final_hope.gene_cyano=RSEM_final_hope.gene_cyano[
!names(RSEM_final_hope.gene_cyano) %in% c("X", "whichOrg", "whichTranscriptome")]
## Rename based on annotations
rownames(RSEM_final_hope.gene_cyano) = make.unique(annotationCyano$gene_name[
match(row.names(RSEM_final_hope.gene_cyano), annotationCyano$custom_gene_name)])
nrow(RSEM_final_hope.gene_cyano) # 3636 genes
## Merge identical proteins in only one row, suming the counts
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano %>%
mutate(base_name = sub("\\.\\d+$", "", rownames(RSEM_final_hope.gene_cyano))) %>%
group_by(base_name) %>%
summarise(across(everything(), sum)) %>%
tibble::column_to_rownames("base_name") %>% data.frame()
nrow(RSEM_final_hope.gene_cyano) # 3589 genes
## Investigate outliers (my function)
makeClusterWGCNA(t(RSEM_final_hope.gene_chytrid))
## In11 clear outlier
makeClusterWGCNA(t(RSEM_final_hope.gene_cyano))
## Investigate outliers (my function)
makeClusterWGCNA(t(RSEM_final_hope.gene_chytrid))
## In11 clear outlier
makeClusterWGCNA(t(RSEM_final_hope.gene_cyano))
#####!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
## Rm In11 from the chytrid dataset
RSEM_final_hope.gene_chytrid = RSEM_final_hope.gene_chytrid[
!names(RSEM_final_hope.gene_chytrid) %in% "met_both_In11"]
## rm genes with zero counts (196 genes of chytrid were only in In11!!)
RSEM_final_hope.gene_chytrid = RSEM_final_hope.gene_chytrid[
rowSums(RSEM_final_hope.gene_chytrid) != 0,]
library(NOISeq)
# if (!requireNamespace("BiocManager", quietly = TRUE))
# install.packages("BiocManager")
BiocManager::install("NOISeq")
library(NOISeq)
# Saturation plot
# The â€œSaturation" plot shows the number of features in the genome detected with more than k counts with
# the sequencing depth of the sample, and with higher and lower simulated sequencing depth
# Create an ExpressionSet object
counts_chy <- as.matrix(RSEM_final_hope.gene_chytrid)
eset_chy <- ExpressionSet(assayData = counts_chy)
mysaturation_chy = dat(eset_chy, k = 0, ndepth = 7, type = "saturation")
## Chytrid alone:
explo.plot(mysaturation_chy, toplot = 1, samples = 1:11)
## Saturation of chytrid low (between 29.7% and 44.1%)
## Both organisms:
explo.plot(mysaturation_chy, toplot = 1, samples = 12:18)
counts_cyano <- as.matrix(RSEM_final_hope.gene_cyano)
eset_cyano <- ExpressionSet(assayData = counts_cyano)
mysaturation_cyano = dat(eset_cyano, k = 0, ndepth = 7, type = "saturation")
## Both organisms:
explo.plot(mysaturation_cyano, toplot = 1, samples = 1:8)
# good (60+) except for In2 and In11 (<35%)
## Cyano alone
explo.plot(mysaturation_cyano, toplot = 1, samples = 9:20)
#####!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
## Rm In2 and In11 from the cyano dataset
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano[
!names(RSEM_final_hope.gene_cyano) %in% c("control_both_In2", "met_both_In11")]
## rm genes with zero counts
RSEM_final_hope.gene_cyano = RSEM_final_hope.gene_cyano[
rowSums(RSEM_final_hope.gene_cyano) != 0,]
RSEM_final_hope.gene_chytrid <- RSEM_final_hope.gene_chytrid[
rowSums(RSEM_final_hope.gene_chytrid >= 10) >= 3,]
RSEM_final_hope.gene_cyano <- RSEM_final_hope.gene_cyano[
rowSums(RSEM_final_hope.gene_cyano >= 10) >= 3,]
nrow(RSEM_final_hope.gene_chytrid) # 1336
nrow(RSEM_final_hope.gene_cyano) # 3497
## I. Chytrid transcripts
contrast_chytridgenome<- calculateContrasts(
my_countsmatrix=RSEM_final_hope.gene_chytrid,
my_org="chy")
## II. Cyano transcripts
contrast_cyanogenome <- calculateContrasts(
my_countsmatrix=RSEM_final_hope.gene_cyano,
my_org="cyano")
## Volcano plots
V_chytrid_inf_effect_control <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_control,
title = "infecting vs non infecting chytrid gene expression, no MET")
V_chytrid_inf_effect_met <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_met,
title = "infecting vs non infecting chytrid gene expression, MET")
V_chytrid_met_effect_1org <- makeVolcano(
res = contrast_chytridgenome$resr_met_effect_1org,
title = "MET effect on chytrid gene expression")
V_chytrid_met_effect_2orgs <- makeVolcano(
res = contrast_chytridgenome$resr_met_effect_2orgs,
title = "MET effect on chytrid infecting bacteria gene expression")
V_cyano_inf_effect_control <- makeVolcano(
res = contrast_cyanogenome$resr_inf_effect_control,
title = "infected vs non infected cyano gene expression, no MET")
V_cyano_inf_effect_met <- makeVolcano(
res = contrast_cyanogenome$resr_inf_effect_met,
title = "infected vs non infected cyano gene expression, MET")
V_cyano_met_effect_1org <- makeVolcano(
res = contrast_cyanogenome$resr_met_effect_1org,
title = "MET effect on cyano gene expression")
V_cyano_met_effect_2orgs <- makeVolcano(
res = contrast_cyanogenome$resr_met_effect_2orgs,
title = "MET effect on cyano infecting bacteria gene expression")
## open bigger window
dev.new(width = 15, height = 12)
pdf("../../figures/Fig1-part1_chytrid_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_chytrid_inf_effect_control$plot,
V_chytrid_inf_effect_met$plot,
V_chytrid_met_effect_1org$plot,
V_chytrid_met_effect_2orgs$plot)
dev.off()
dev.new(width = 15, height = 12)
pdf("../../figures/Fig2-part1_cyano_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot)
dev.off()
## Venn diagrams
# devtools::install_github("yanlinlin82/ggvenn")
library(ggvenn)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met))
pdf("../../figures/Fig1-part2_Venn.pdf", width = 5, height = 5)
ggvenn(
venn_data, show_stats = "c", fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
ggvenn(
venn_data, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
ggvenn(
venn_data, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
dev.off()
dev.off()
ggvenn(
venn_data, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
ggvenn(
venn_data, show_percentage = F, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
pdf("../../figures/Fig1-part2_Venn.pdf", width = 5, height = 5)
ggvenn(
venn_data, show_percentage = F, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
dev.off()
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect cyano - control"=
getGenes(contrast_cyanogenome$resr_inf_effect_control),
"met effect cyano - alone"=
getGenes(contrast_cyanogenome$resr_met_effect_1org),
"met effect cyano - infected"=
getGenes(contrast_cyanogenome$resr_met_effect_2orgs),
"infection effect cyano - met"=
getGenes(contrast_cyanogenome$resr_inf_effect_met))
pdf("../../figures/Fig3-part1_Venn.pdf", width = 5, height = 5)
ggvenn(
venn_data, show_percentage = F, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
dev.off()
dev.off()
dev.off()
pdf("../../figures/Fig3-part1_Venn.pdf", width = 5, height = 5)
ggvenn(
venn_data, show_percentage = F, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
dev.off()
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect cyano - control"=
getGenes(contrast_cyanogenome$resr_inf_effect_control),
"met effect cyano - alone"=
getGenes(contrast_cyanogenome$resr_met_effect_1org),
"met effect cyano - infected"=
getGenes(contrast_cyanogenome$resr_met_effect_2orgs),
"infection effect cyano - met"=
getGenes(contrast_cyanogenome$resr_inf_effect_met))
pdf("../../figures/Fig4-part1_Venncyano.pdf", width = 5, height = 5)
ggvenn(
venn_data, show_percentage = F, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
dev.off()
## Save results in tables
selectDEGenes <- function(x) {x[x$padj < 0.05 & !is.na(x$padj),]}
## 1. chytrid
contrast_chytridgenome_DEG <- lapply(contrast_chytridgenome[1:4], selectDEGenes)
x <- list()
for (i in 1:4) {
if (nrow(contrast_chytridgenome_DEG[[i]]) > 0) {  # Check if the data frame is not empty
x[[i]] <- data.frame(
geneName = rownames(contrast_chytridgenome_DEG[[i]]),
padj = contrast_chytridgenome_DEG[[i]]$padj,
log2FoldChange = contrast_chytridgenome_DEG[[i]]$log2FoldChange
)
x[[i]]$comparison <- names(contrast_chytridgenome_DEG)[i]
} else {
x[[i]] <- data.frame()  # Create an empty data frame if no rows are present
}
}
contrast_chytridgenome_DEG <- do.call(rbind, x)
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_inf_effect_control"] <-
"Infection effect on chytrid gene expression, in the absence of MET"
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_inf_effect_met"] <-
"Infection effect on chytrid gene expression, in the presence of MET "
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_met_effect_1org"] <-
"MET effect on chytrid gene expression, in free-living chytrid zoospores"
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_met_effect_2orgs"] <-
"MET effect on chytrid gene expression, in infecting chytrid"
table(contrast_chytridgenome_DEG$comparison)
## 2. cyanobacteria
contrast_cyanogenome_DEG <- lapply(contrast_cyanogenome[1:4], selectDEGenes)
x <- list()
for (i in 1:4) {
if (nrow(contrast_cyanogenome_DEG[[i]]) > 0) {  # Check if the data frame is not empty
x[[i]] <- data.frame(
geneName = rownames(contrast_cyanogenome_DEG[[i]]),
padj = contrast_cyanogenome_DEG[[i]]$padj,
log2FoldChange = contrast_cyanogenome_DEG[[i]]$log2FoldChange
)
x[[i]]$comparison <- names(contrast_cyanogenome_DEG)[i]
} else {
x[[i]] <- data.frame()  # Create an empty data frame if no rows are present
}
}
contrast_cyanogenome_DEG <- do.call(rbind, x)
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_inf_effect_control"] <-
"Infection effect on cyanobacteria gene expression, in the absence of MET"
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_inf_effect_met"] <-
"Infection effect on cyanobacteria gene expression, in the presence of MET "
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_met_effect_1org"] <-
"MET effect on cyanobacteria gene expression, in uninfected cyanobacteria"
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_met_effect_2orgs"] <-
"MET effect on cyanobacteria gene expression, in infected bacteria"
table(contrast_cyanogenome_DEG$comparison)
fullDEGTable <- rbind(contrast_chytridgenome_DEG, contrast_cyanogenome_DEG)
fullDEGTable$padj <- signif(fullDEGTable$padj, 2)
fullDEGTable$log2FoldChange <- signif(fullDEGTable$log2FoldChange, 2)
write.csv(fullDEGTable, "../../figures/TableS1_fullDEGTable.tsv", row.names = F)
## open bigger window
dev.new(width = 15, height = 12)
pdf("../../figures/Fig1_chytrid_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_chytrid_inf_effect_control$plot,
V_chytrid_inf_effect_met$plot,
V_chytrid_met_effect_1org$plot,
V_chytrid_met_effect_2orgs$plot)
dev.off()
pdf("../../figures/Fig2_cyano_volc.pdf", width = 15, height = 15)
dev.new(width = 15, height = 12)
pdf("../../figures/Fig2_cyano_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot)
dev.off()
V_cyano_inf_effect_control$plot
V_cyano_inf_effect_control$plot +
ggtitle("coucou")
V_cyano_inf_effect_control$plot +
ggtitle("coucou", subtitle = "sub")
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot, labels = c("a", "b", "c", "d"))
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot,
labels = c("a", "b", "c", "d"))
dev.off()
dev.off()
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot,
labels = c("a", "b", "c", "d"))
dev.new(width = 15, height = 12)
pdf("../../figures/Fig2_cyano_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot,
labels = c("a", "b", "c", "d"))
dev.off()
dev.new(width = 15, height = 12)
pdf("../../figures/Fig2_cyano_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot,
labels = c("a", "b", "c", "d"), label_size = 20)
dev.off()
makeVolcano <- function(res, title, subtitle){
results_df = as.data.frame(res)
results_df = results_df[order(results_df$padj),]
# Subset the results to keep only significant genes
ressig = results_df[results_df$padj < 0.05 & !is.na(results_df$padj),]
## Volcano plot
plot = EnhancedVolcano(results_df,
lab = row.names(results_df),
x = 'log2FoldChange', title = title,
y = 'padj', pCutoff = 0.05,
drawConnectors = TRUE, labSize = 3) +
ggtitle(subtitle = subtitle)
return(list(signifGenes = ressig, plot = plot))
}
## Volcano plots
V_chytrid_inf_effect_control <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_control,
title = "Infection effect on chytrid gene expression",
subtitle = "absence of metolachlor")
V_chytrid_inf_effect_met <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_met,
title = "Infection effect on chytrid gene expression",
subtitle = "presence of metolachlor")
makeVolcano <- function(res, title, subtitle){
results_df = as.data.frame(res)
results_df = results_df[order(results_df$padj),]
# Subset the results to keep only significant genes
ressig = results_df[results_df$padj < 0.05 & !is.na(results_df$padj),]
## Volcano plot
plot = EnhancedVolcano(results_df,
lab = row.names(results_df),
x = 'log2FoldChange', title = title,
y = 'padj', pCutoff = 0.05,
drawConnectors = TRUE, labSize = 3) +
ggtitle(label = title, subtitle = subtitle)
return(list(signifGenes = ressig, plot = plot))
}
## Volcano plots
V_chytrid_inf_effect_control <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_control,
title = "Infection effect on chytrid gene expression",
subtitle = "absence of metolachlor")
V_chytrid_inf_effect_met <- makeVolcano(
res = contrast_chytridgenome$resr_inf_effect_met,
title = "Infection effect on chytrid gene expression",
subtitle = "presence of metolachlor")
V_chytrid_met_effect_1org <- makeVolcano(
res = contrast_chytridgenome$resr_met_effect_1org,
title = "Metolachlor effect on chytrid gene expression",
subtitle = "free-living zoospores")
V_chytrid_met_effect_2orgs <- makeVolcano(
res = contrast_chytridgenome$resr_met_effect_2orgs,
title = "Metolachlor effect on chytrid gene expression",
subtitle = "during infection")
V_cyano_inf_effect_control <- makeVolcano(
res = contrast_cyanogenome$resr_inf_effect_control,
title = "Infection effect on cyanobacteria gene expression",
subtitle = "absence of metolachlor")
V_cyano_inf_effect_met <- makeVolcano(
res = contrast_cyanogenome$resr_inf_effect_met,
title = "Infection effect on cyanobacteria gene expression",
subtitle = "presence of metolachlor")
V_cyano_met_effect_1org <- makeVolcano(
res = contrast_cyanogenome$resr_met_effect_1org,
title = "Metolachlor effect on cyanobacteria gene expression",
subtitle = "uninfected cyanobacteria")
V_cyano_met_effect_2orgs <- makeVolcano(
res = contrast_cyanogenome$resr_met_effect_2orgs,
title = "Metolachlor effect on cyanobacteria gene expression",
subtitle = "infected cyanobacteria")
## open bigger window
dev.new(width = 15, height = 12)
pdf("../../figures/Fig1_chytrid_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_chytrid_inf_effect_control$plot,
V_chytrid_inf_effect_met$plot,
V_chytrid_met_effect_1org$plot,
V_chytrid_met_effect_2orgs$plot,
labels = c("a", "b", "c", "d"), label_size = 20)
dev.off()
dev.new(width = 15, height = 12)
pdf("../../figures/Fig2_cyano_volc.pdf", width = 15, height = 15)
cowplot::plot_grid(V_cyano_inf_effect_control$plot,
V_cyano_inf_effect_met$plot,
V_cyano_met_effect_1org$plot,
V_cyano_met_effect_2orgs$plot,
labels = c("a", "b", "c", "d"), label_size = 20)
dev.off()
## Venn diagrams
# devtools::install_github("yanlinlin82/ggvenn")
library(ggvenn)
## Select differentially expressed genes in each comparison
getGenes <- function(x) {rownames(x[x$padj < 0.05 & !is.na(x$padj),])}
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect chytrid - control"=
getGenes(contrast_chytridgenome$resr_inf_effect_control),
"met effect chytrid - free living"=
getGenes(contrast_chytridgenome$resr_met_effect_1org),
"met effect chytrid - infecting"=
getGenes(contrast_chytridgenome$resr_met_effect_2orgs),
"infection effect chytrid - met"=
getGenes(contrast_chytridgenome$resr_inf_effect_met))
pdf("../../figures/Fig3-part1_Venn.pdf", width = 5, height = 5)
ggvenn(
venn_data, show_percentage = F, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
dev.off()
# Combine the lists into a named list for the Venn diagram
venn_data <- list("infection effect cyano - control"=
getGenes(contrast_cyanogenome$resr_inf_effect_control),
"met effect cyano - alone"=
getGenes(contrast_cyanogenome$resr_met_effect_1org),
"met effect cyano - infected"=
getGenes(contrast_cyanogenome$resr_met_effect_2orgs),
"infection effect cyano - met"=
getGenes(contrast_cyanogenome$resr_inf_effect_met))
pdf("../../figures/Fig4-part1_Venncyano.pdf", width = 5, height = 5)
ggvenn(
venn_data, show_percentage = F, fill_color = rep("white", 4),
stroke_size = 0.5, set_name_size = 4
)
dev.off()
## Save results in tables
selectDEGenes <- function(x) {x[x$padj < 0.05 & !is.na(x$padj),]}
## 1. chytrid
contrast_chytridgenome_DEG <- lapply(contrast_chytridgenome[1:4], selectDEGenes)
x <- list()
for (i in 1:4) {
if (nrow(contrast_chytridgenome_DEG[[i]]) > 0) {  # Check if the data frame is not empty
x[[i]] <- data.frame(
geneName = rownames(contrast_chytridgenome_DEG[[i]]),
padj = contrast_chytridgenome_DEG[[i]]$padj,
log2FoldChange = contrast_chytridgenome_DEG[[i]]$log2FoldChange
)
x[[i]]$comparison <- names(contrast_chytridgenome_DEG)[i]
} else {
x[[i]] <- data.frame()  # Create an empty data frame if no rows are present
}
}
contrast_chytridgenome_DEG <- do.call(rbind, x)
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_inf_effect_control"] <-
"Infection effect on chytrid gene expression, in the absence of MET"
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_inf_effect_met"] <-
"Infection effect on chytrid gene expression, in the presence of MET "
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_met_effect_1org"] <-
"MET effect on chytrid gene expression, in free-living chytrid zoospores"
contrast_chytridgenome_DEG$comparison[
contrast_chytridgenome_DEG$comparison %in% "resr_met_effect_2orgs"] <-
"MET effect on chytrid gene expression, in infecting chytrid"
table(contrast_chytridgenome_DEG$comparison)
## 2. cyanobacteria
contrast_cyanogenome_DEG <- lapply(contrast_cyanogenome[1:4], selectDEGenes)
x <- list()
for (i in 1:4) {
if (nrow(contrast_cyanogenome_DEG[[i]]) > 0) {  # Check if the data frame is not empty
x[[i]] <- data.frame(
geneName = rownames(contrast_cyanogenome_DEG[[i]]),
padj = contrast_cyanogenome_DEG[[i]]$padj,
log2FoldChange = contrast_cyanogenome_DEG[[i]]$log2FoldChange
)
x[[i]]$comparison <- names(contrast_cyanogenome_DEG)[i]
} else {
x[[i]] <- data.frame()  # Create an empty data frame if no rows are present
}
}
contrast_cyanogenome_DEG <- do.call(rbind, x)
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_inf_effect_control"] <-
"Infection effect on cyanobacteria gene expression, in the absence of MET"
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_inf_effect_met"] <-
"Infection effect on cyanobacteria gene expression, in the presence of MET "
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_met_effect_1org"] <-
"MET effect on cyanobacteria gene expression, in uninfected cyanobacteria"
contrast_cyanogenome_DEG$comparison[
contrast_cyanogenome_DEG$comparison %in% "resr_met_effect_2orgs"] <-
"MET effect on cyanobacteria gene expression, in infected bacteria"
table(contrast_cyanogenome_DEG$comparison)
fullDEGTable <- rbind(contrast_chytridgenome_DEG, contrast_cyanogenome_DEG)
fullDEGTable$padj <- signif(fullDEGTable$padj, 2)
fullDEGTable$log2FoldChange <- signif(fullDEGTable$log2FoldChange, 2)
write.csv(fullDEGTable, "../../figures/TableS1_fullDEGTable.tsv", row.names = F)
#############
## Chytrid ##
a=getGenes(contrast_chytridgenome$resr_met_effect_1org)
b=getGenes(contrast_chytridgenome$resr_met_effect_2orgs)
c=getGenes(contrast_chytridgenome$resr_inf_effect_control)
d=getGenes(contrast_chytridgenome$resr_inf_effect_met)
## Metolachlor effect on free-living AND infecting chytrid: 3 genes ##
intersect(a, b)[!intersect(a, b) %in% union(c, d)]
